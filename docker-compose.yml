version: '3'

services:

  nginx:
    container_name: nginx_proxy
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    networks:
      - r3c-docker-net

  postgresql:
    container_name: postgresr3c
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Hj4ffr8&_77
      - POSTGRES_DB=r3c_database
    volumes:
      - ./database/r3c-database-init.sql:/docker-entrypoint-initdb.d/r3c-database-init.sql
      - ./database/current_backup.sql:/r3c-database_backup.sql:rw
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - r3c-docker-net
      
  mqtt-interface:
    container_name: mqtt-interface
    build:
      context: ./mqtt_interface/
      dockerfile: Dockerfile
    image: mqtt-interface:dev
    volumes:
      - type: bind
        source: ./settings.json
        target: /mqtt-interface/settings.json
    restart: unless-stopped
    depends_on:
      - postgresql
    networks:
      - r3c-docker-net
      
  grafana:
    build:
      context: ./grafana/
      dockerfile: Dockerfile
    image: grafana-r3c:dev
    container_name: grafana
    restart: unless-stopped
    expose:
     - 3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/img/:/usr/share/grafana/public/img/r3c/:ro
    networks:
      - r3c-docker-net

networks:
  r3c-docker-net:

volumes:
  postgres-data: {}
  grafana-storage: {}
